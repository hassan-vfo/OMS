

######## Spring Application configurations ############
spring.application.name=oms
server.port=9595
server.servlet.context-path=/${spring.application.name}

logging.config=file:/opt/seamless/conf/order-management-system/log4j2.properties

############ Spring Doc (OpenAPI 3) configurations #############
springdoc.swagger-ui.disable-swagger-default-url=true


############ Multipart File Properties ###############
spring.servlet.multipart.enabled=true
# Max file size.
spring.servlet.multipart.max-file-size=10MB
# Max Request Size
spring.servlet.multipart.max-request-size=15MB

############# MariaDB  configurations #################
spring.datasource.url=jdbc:mariadb://svc-haproxy:4306/order_management_system
spring.datasource.username=refill
spring.datasource.password=refill
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.hibernate.ddl-auto=validate

spring.datasource.test-on-borrow=true
spring.datasource.validation-query=SELECT 1
spring.datasource.remove-abandoned=true
spring.datasource.remove-abandoned-timeout=30
spring.datasource.max-active=500
spring.datasource.max-idle=15
spring.datasource.min-idle=15
spring.datasource.dbcp2.test-while-idle=true

spring.jpa.config.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.config.hibernate.format_sql=true
spring.jpa.config.hibernate.ejb.naming_strategy=org.hibernate.cfg.EJB3NamingStrategy
spring.jpa.config.hibernate.show_sql=true
spring.jpa.config.hibernate.hbm2ddl.auto=validate
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.id.new_generator_mappings=false

spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=120000
spring.datasource.hikari.connectionTimeout=300000
spring.datasource.hikari.leakDetectionThreshold=300000

############# DB Migration ####################
spring.flyway.enabled=false
spring.flyway.baseline-on-migrate=false
spring.flyway.validate-on-migrate=false
spring.flyway.locations=filesystem:/opt/seamless/etc/dist/ordermanagementsystem/database/order_management_system/upgrades
spring.flyway.sql-migration-prefix=1.0_

############# Integration/Proxy ####################
rest.template.http.max.idle=80
rest.template.http.keep.alive=5000
rest.template.http.connection.timeout=5000
rest.template.http.read.timeout=50000

inventory.management.proxy.uri=http://svc-inventory-management:10103
inventory.management.proxy.name=ims-service

#reseller.management.proxy.uri=http://10.8.45.226:30003
reseller.management.proxy.uri=http://svc-dealer-management:8033
reseller.management.proxy.name=dms-service

alert.app.proxy.uri=http://localhost:8375
alert.app.proxy.name=alertAppProxy
subscriber.management.proxy.uri=NA
subscriber.management.proxy.name=subscriberPartyProxy
subscriber.management.default.type.id=SUBSCRIBER
subscriber.management.default.account.id=OPERATOR

account.management.proxy.uri=http://svc-account-management:8092

#account.management.proxy.uri=http://10.8.45.226:30011
account.management.proxy.uri=http://svc-account-management:8092
account.management.proxy.name=ers-account

#product.management.proxy.uri=http://10.8.45.226:30016
product.management.proxy.uri=http://svc-product-management:8012
product.management.proxy.name=pms-service

#contract.management.proxy.uri=http://10.8.45.226:30001
contract.management.proxy.uri=http://svc-contract-management:38082
contract.management.proxy.name=cms-service

trip.management.proxy.uri=http://localhost:12001
trip.management.proxy.name=tms-service

erp.link.proxy.uri=http://10.8.80.123:8098
erp.link.proxy.name=vfoProxy
ers.reference.generator.proxy.uri=http://svc-reference-generator:9997
ers.reference.generator.proxy.name=ers-reference-generator

#####  TXE Proxy #####

ers.connections.transaction_processing.url=http://svc-txe:8777/txe/transactionProcessing
ers.connections.transaction_processing.user=extclientproxy
ers.connections.transaction_processing.password=extclientproxy

#####  Pretups Proxy #####
pretups.link.proxy.uri=http://localhost:8090
pretups.link.proxy.name=pretups

#notification.management.proxy.uri=http://10.8.45.226:30018
notification.management.proxy.uri=http://svc-notification-manager:8277
notification.management.proxy.name=notification-service
notification.management.proxy.failed.resultcode=9999
notification.management.default.sender.mail=donotreply.sfo@gmail.com
notification.management.INSTANT_SALES_ORDER.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "paymentConfirmation" : "PaymentConfirmationRequest", "postOrderConfirmation" : "PostConfirmationRequest", "postPaymentConfirmation" : "PaymentPostConfirmation"}
notification.management.INSTANT_SALES_ORDER_ST.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest"}
notification.management.INSTANT_SALES_ORDER_DST.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder_ISO_DST_Commission", "postOrderConfirmation" : "PostConfirmationRequest"}
#notification.management.INSTANT_SALES_ORDER_DST.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest"}
notification.management.ISRO_ST.templates={"confirmationRequest" : "ConfirmationRequest", "returnComplete" : "ReturnComplete"}
notification.management.INSTANT_PURCHASE_RETURN_ORDER_ST.templates={"confirmationRequest" : "ConfirmationRequest", "returnComplete" : "ReturnComplete"}
notification.management.INSTANT_PURCHASE_ORDER_ST.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest", "postERPInventoryUpload" : "PostERPInventoryUpload"}
notification.management.INSTANT_PURCHASE_ORDER.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "paymentConfirmation" : "PaymentConfirmationRequest", "postOrderConfirmation" : "PostConfirmationRequest", "postPaymentConfirmation" : "PaymentPostConfirmation", "postERPInventoryUpload" : "PostERPInventoryUpload"}
notification.management.PURCHASE_ORDER.templates={"approvalRequest" : "ApprovalRequest", "orderCreated" : "CreateOrder", "paymentConfirmation" : "PaymentConfirmationRequest", "postOrderConfirmation" : "PostConfirmationRequest", "postPaymentConfirmation" : "PaymentPostConfirmation"}
notification.management.PUSH_INVENTORY_SALES_ORDER.templates={"confirmationRequest" : "ConfirmationRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest"}
notification.management.SALES_ORDER.templates={"approvalRequest" : "ApprovalRequest", "orderCreated" : "CreateOrder", "paymentConfirmation" : "PaymentConfirmationRequest", "postOrderConfirmation" : "PostConfirmationRequest", "postPaymentConfirmation" : "PaymentPostConfirmation"}
notification.management.SALES_ORDER_ST.templates={"approvalRequest" : "ApprovalRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest"}
notification.management.INSTANT_PURCHASE_ORDER_DIGITAL.templates={"orderCreated" : "CreateOrder"}
notification.management.INSTANT_SALES_ORDER_DIGITAL.templates={"orderCreated" : "CreateOrder", "confirmationRequest" : "ConfirmationRequest", "paymentConfirmation" : "PaymentConfirmationRequest","postOrderConfirmation" : "PostConfirmationRequest", "postPaymentConfirmation" : "PaymentPostConfirmation"}
notification.management.INSTANT_RETURN_ORDER.templates={"confirmationRequest" : "ConfirmationRequest", "returnComplete" : "ReturnComplete", "postOrderConfirmation" : "PostConfirmationRequest"}
notification.management.RETURN_ORDER.templates={"approvalRequest" : "ApprovalRequest", "orderCreated" : "CreateOrder", "postOrderConfirmation" : "PostConfirmationRequest"}
############# Service API URL ################
cms.calculate.price.url=/acms/v2/calculate-pricing

############# CORS config ####################
cors.enable=false
#comma separated origin list or star(*) to allow all
cors.allowedorigins=*
http.response.headers=system-token,authorization

############# Thymeleaf configuration ####################
spring.thymeleaf.check-template-location=true
#spring.thymeleaf.prefix=file:/opt/seamless/conf/order-management-system/templates/notification/
spring.thymeleaf.prefix=file:/opt/seamless/conf/order-management-system/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false

############# workflow States configuration ####################
order.type.default.created.state=CREATED
order.type.default.transferred.state=TRANSFERRED
order.type.default.wait.confirmation.state=TRANSFER_WAIT_CONFIRM
order.type.default.payment.confirmation.state=PAYMENT_WAIT_CONFIRM
order.type.default.returned.state=RETURN_TRANSFERRED
order.type.default.return.inventory.reserved.state=Reserved
order.type.default.return.wait.confirmation.state=RETURN_TRANSFER_WAIT_CONFIRM
order.type.default.rejected.state=TRANSFER_REJECTED
order.type.default.payment.failed.state=PAYMENT_FAILED
order.type.default.return.reject.state=RETURN_TRANSFER_REJECTED
order.type.default.external.create.wait.state=EXTERNAL_WAIT_CREATED
order.type.default.external.scheduled.state=EXTERNAL_SCHEDULED
order.type.default.external.create.state=EXTERNAL_CREATED
order.type.default.external.return.state=EXTERNAL_RETURN_TRANSFERRED
order.type.default.external.process.failed.state=EXTERNAL_PROCESS_FAILED
order.type.default.external.return.wait.confirmation.state=EXTERNAL_RETURN_TRANSFER_WAIT_CONFIRM
order.type.default.external.return.reject.state=EXTERNAL_RETURN_TRANSFER_REJECTED
order.type.default.external.create.error.state=EXTERNAL_CREATED_WITH_ERROR
order.type.default.submitted.state=SUBMITTED
order.type.default.pending.approval.state=PENDING_APPROVAL
order.type.default.approval.rejected.state=REJECTED
order.type.default.reserved.state=RESERVED
order.type.default.wait.reserved.state=RESERVED_WAIT_CONFIRM
order.type.default.reserve.rejected.state=RESERVE_REJECTED
order.type.default.reversed.state=REVERSED
order.inventory.default.reserve.state=Reserved
order.type.default.payment.initiated.state=PAYMENT_INITIATED
order.type.default.reverse.initial.state=REVERSE_INITIATED
order.type.default.reverse.final.state=REVERSED
order.type.default.reverse.fail.state=REVERSE_FAILED
order.type.default.reverse.wait.state=REVERSE_WAIT_CONFIRM
order.type.return_order.confirmation.state=RETURN_SUBMITTED
order.type.default.waiting.reservation.state=WAITING_RESERVATION
order.type.default.return.incomplete.state=RETURN_INCOMPLETE

order.type.wait.confirmation.state.map={"ISO_ST" : "TRANSFER_WAIT_CONFIRM" , "IPRO_ST" : "RETURN_TRANSFER_WAIT_CONFIRM", "ISO" : "TRANSFER_WAIT_CONFIRM", "IPO" : "TRANSFER_WAIT_CONFIRM", "IPO_ST" : "TRANSFER_WAIT_CONFIRM", "ISRO_ST" : "RETURN_TRANSFER_WAIT_CONFIRM", "PO" : "PENDING_APPROVAL", "PISO" : "RESERVED_WAIT_CONFIRM", "SO_ST" : "PENDING_APPROVAL", "SO" : "PENDING_APPROVAL", "ISO_DST" : "TRANSFER_WAIT_CONFIRM"}
order.type.payment.confirmation.state.map={"ISO" : "PAYMENT_WAIT_CONFIRM", "IPO" : "PAYMENT_WAIT_CONFIRM", "PO" : "PAYMENT_WAIT_CONFIRM", "SO" : "PAYMENT_WAIT_CONFIRM"}

############# ERSWSTransactionProcessingService Connection Properties ####################
transaction_processing.pending_timeout=500000
transaction_processing.prepare_only=false
transaction_processing.initiator.principal.msisdn=16010000
transaction_processing.context.channel=ORDER-MANAGEMENT-CLIENT
transaction_processing.context.clientId=OMS-APP
transaction_processing.account.accountTypeId=RESELLER
transaction_processing.transaction.properties.paymentMode=paymentMode
transaction_processing.transaction.properties.paymentAgreement=paymentAgreement
transaction_processing.transaction.properties.clientReference=clientReference
transaction_processing.transaction.properties.orderId=orderId
## TopUp Subscriber Input Key in request:
transaction_processing.topup.subscriber.msisdn.key=SUBSCRIBERMSISDN
transaction_processing.topup.account.specifier.type.key=accountTypeId
transaction_processing.topup.account.specifier.type.value=AIRTIME
transaction_processing.topup.amount.key=amount

## Transfer amount input key in request
transaction_processing.transfer.amount.key=amount

######### Currency ##########
locale.default.currency=OMR
## Product Data amount/offerPrice input key in request
product.service.amount.key=amount
product.offer.price.key=offerPrice
############ Sort & Filter Configurations ###############
### Default Config ###
oms.data.fetch.default.perPage=30
oms.data.fetch.default.page=1
oms.data.desc.sort.default=createdStamp

order.fetch.filter.map={'orderId' : 'orderId', 'sellerId' :'seller', 'senderId' :'sender', 'receiverId' :'receiver', 'initiatorId' :'initiator', 'buyerId' :'buyer', 'createTimestamp' :'createdStamp', 'state' :'state', 'orderType' :'orderType', 'paymentAgreement' :'paymentAgreement', 'fetchReturnableOrders':'fetchReturnableOrders'}
order.fetch.sort.map={'orderId' : 'orderId', 'sellerId' :'seller', 'senderId' :'sender', 'receiverId' :'receiver', 'initiatorId' :'initiator', 'buyerId' :'buyer', 'createTimestamp' :'createdStamp', 'state' :'state', 'orderType' :'orderType', 'paymentAgreement' :'paymentAgreement'}


payment.fetch.filter.map={'payer':'payer','paymentId' : 'paymentId','invoiceId' : 'invoiceId','orderId' : 'orderId','paymentMode' : 'paymentMode','paymentAmount' : 'totalAmount','paymentLink' : 'paymentLink','status' : 'status','transactionTime' : 'createdStamp'}
payment.fetch.sort.map={'payer':'payer','paymentId' : 'paymentId','invoiceId' : 'invoiceId','orderId' : 'orderId','paymentMode' : 'paymentMode','paymentAmount' : 'totalAmount','paymentLink' : 'paymentLink','status' : 'status','transactionTime' : 'createdStamp'}
invoice.fetch.filter.map={'invoiceId' : 'invoiceId', 'orderId' : 'orderId', 'buyer' : 'buyer', 'seller' : 'seller', 'receiver' : 'receiver', 'generatedBy' : 'generatedBy', 'status' : 'status', 'dueAmount' : 'dueAmount', 'totalPrice' : 'totalAmount', 'totalTax' : 'totalTax', 'totalSellerCommission' : 'totalSellerCommission', 'totalBuyerCommission' : 'totalBuyerCommission', 'totalDiscount' : 'totalDiscount', 'createTimestamp' : 'createdStamp'}
invoice.fetch.sort.map={'invoiceId' : 'invoiceId', 'buyer' : 'buyer', 'seller' : 'seller', 'receiver' : 'receiver', 'generatedBy' : 'generatedBy', 'status' : 'status', 'dueAmount' : 'dueAmount', 'totalPrice' : 'totalAmount', 'createTimestamp' : 'createdStamp'}
credit_note.fetch.filter.map={'creditNoteId' : 'creditNoteId', 'originalOrderId' : 'originalOrderId', 'returnOrderId' : 'returnOrderId', 'buyer' : 'buyer', 'seller' : 'seller', 'receiver' : 'receiver', 'status' : 'status', 'totalPrice' : 'totalAmount', 'totalTax' : 'totalTax', 'totalSellerCommission' : 'totalSellerCommission', 'totalBuyerCommission' : 'totalBuyerCommission', 'totalPenalty' : 'totalPenalty',   'createTimestamp' : 'createdStamp'}
credit_note.fetch.sort.map={'creditNoteId' : 'creditNoteId', 'buyer' : 'buyer', 'seller' : 'seller', 'receiver' : 'receiver', 'status' : 'status', 'totalPrice' : 'totalAmount', 'createTimestamp' : 'createdStamp'}
order_product_quota_rule.fetch.filter.map={'ruleId' : 'ruleId', 'resellerId' : 'resellerId', 'productSKU' : 'productSKU', 'quotaFor' : 'quotaFor', 'multipleOf' : 'multipleOf',  'hourlyLimit' : 'hourlyLimit', 'dailyLimit' : 'dailyLimit', 'weeklyLimit' : 'weeklyLimit', 'monthlyLimit' : 'monthlyLimit', 'createTimestamp' : 'createdStamp'}
order_product_quota_rule.fetch.sort.map={'ruleId' : 'ruleId', 'resellerId' : 'resellerId', 'productSKU' : 'productSKU', 'quotaFor' : 'quotaFor', 'multipleOf' : 'multipleOf', 'hourlyLimit' : 'hourlyLimit', 'dailyLimit' : 'dailyLimit', 'weeklyLimit' : 'weeklyLimit', 'monthlyLimit' : 'monthlyLimit', 'createTimestamp' : 'createdStamp'}
order.pay.while.ordering.payment.agreements=UPFRONT
######### Order Management Transaction Retry ###########
order.transaction.retry.max.attempts=10
order.transaction.retry.max.delay=1000
order.transaction.payment.retry.max.attempts=5

##################### Message Resource Properties ########################
locale.message.path=/opt/seamless/conf/order-management-system
locale.message.prefix=messages

####################### Data feed version ################################
dataFeed.version=1
#dataFeed.componentName=order-management-system
dataFeed.componentName=oms

################### Configuration for executor service ###################
threadpoolmanager.pools.dataFeed.targetId=com.seamless.common.data.dump.dataFeed
threadpoolmanager.pools.dataFeed.corePoolSize=25
threadpoolmanager.pools.dataFeed.maxPoolSize=40
threadpoolmanager.pools.dataFeed.keepAliveTime=60000
threadpoolmanager.pools.dataFeed.keepAliveTimeUnit=MILLISECONDS

######################### Configure freemarker ############################
dataFeed.freemarker.file.path=/opt/seamless/conf/order-management-system/templates
#dataFeed.freemarker.file.path=/opt/seamless/conf/order-management-system/templates/tdr
template.RAISE_ORDER=raise_order.ftl
#template.FAILED_RAISE_ORDER=raise_order.ftl
template.FAILED_RAISE_ORDER=failed_raise_order.ftl

######################### Contract Tags Properties  ############################
contract.commission.tags=COMMISSION,SENDER_COMMISSION,RECEIVER_COMMISSION
contract.discount.tags=DISCOUNT,RECEIVER_DISCOUNT,SENDER_DISCOUNT
contract.payment.tags=SENDER,RECEIVER

contract.sender.commission.tag=SENDER_COMMISSION
contract.receiver.commission.tag=RECEIVER_COMMISSION
contract.receiver.discount.tags=RECEIVER_DISCOUNT
contract.receiver.penalty.tags=RECEIVER_PENALTY

contract.commission.disable.productSKU.list=TOPUP,TRANSFER
contract.discount.disable.productSKU.list=TRANSFER
service.product.type.list=SERVICES_B2B,SERVICES_TOPUP
contract.request.fields.paymentMode.key=paymentMode
contract.request.fields.paymentAgreement.key=paymentAgreement
contract.request.fields.productType.key=productType
################### Reseller Related Properties ######################
# Search Attribute map value can be RESELLER_ID/RESELLER_MSISDN/EXTERNAL_FIELD
# If we choose attribute as RESELLER_ID/RESELLER_MSISDN we will search user as RESELLER_ID/RESELLER_MSISDN
# If we choose attribute as EXTERNAL_FIELD, then we will search reseller with external.field in DB
# Search Attribute map, key can be configured as channel, which will accept at any request
# For Ex: 3PP is channel, every time we search reseller with external-field for this channel
# default value would be RESELLER_ID, if there is no channel defined.
dms.search.attribute.channel.map={"3PP" : "EXTERNAL_FIELD", "order-management-api" : "RESELLER_ID"}
dms.search.attribute.external.field=region

################# Kafka Streams configurations #################
spring.kafka.producer.bootstrap-servers=http://svc-haproxy:9092
spring.kafka.consumer.properties.max.poll.interval.ms=120000
oms-out-stream.po-out.topic.name=order-management-do-dev
oms-out-stream.partitionCount=12

ic-out-stream.order-confirm.topic.name=ic-order-confirmation-do-dev
ic-out-stream.order-confirm.partitionCount=12
ic-out-stream.order-confirm.groupName=ic-order-confirmation
# ic-out-stream.order-confirm.listen.auto.start=true
ic-out-stream.payment-confirm.topic.name=ic-payment-confirmation-do-dev
ic-out-stream.payment-confirm.partitionCount=12
ic-out-stream.payment-confirm.groupName=ic-payment-status
# oms-out-stream.po-out.produce.auto.start=true
################# Schedulers ###################################
invoice.settlement.scheduler.cron=0 0 1 * * *
order-payment.timeout.scheduler.cron=0 * * * * *

populate.external.inventory.scheduler.enable=false
populate.external.inventory.scheduler.failure.states=FAILURE
populate.external.inventory.scheduler.success.states=CLOSED
populate.external.inventory.scheduler.pending.states=PENDING
populate.external.inventory.scheduler.max.capacity=10
populate.external.inventory.scheduler.system-token={  "ersReference": "87627365768275356776",  "startTime": "1614254785232",  "rootComponent": "order-management",  "context": {    "client": {      "channel": "swagger-ui",      "clientId": "OM-Swagger",      "clientReference": "OMS"    },    "initiator": {      "uid": "OPERATOR",      "typ": "RESELLERUSERID",      "rtp": "operator",      "rmsisdn": "16010000",      "resellerPath": "OPERATOR"    }  }}
populate.external.inventory.scheduler.authorization=6534
populate.external.inventory.scheduler.cron=0/20 * * * * ?
populate.external.inventory.scheduler.start.serial.key=start_serial
populate.external.inventory.scheduler.end.serial.key=end_serial

################# External field configuration #################
#order.applicable.operationId.mapping={"registerExternalOrder_PO":"SFC_RAISE_ORDER","fetchDealerBalance":"SFC_FETCH_DEALER_BALANCE","getLineItemsStatus":"SFC_LINE_ITEM_STATUS", "getLineItems":"SFC_PICK_LIST", "fetchERPOrderStatus" : "SFC_FETCH_ERP_ORDER_STATUS", "registerDigitalExternalOrder":"SFC_DIGITAL_RAISE_ORDER", "fetchPretupsDealerBalance":"PRETUP_DIGITAL_DEALER_BALANCE", "pretupTransferRequest":"PRETUP_TRANSFER_REQUEST", "reconcileExternalInventory" : "VFO_RECONCILE_UPLOAD_INVENTORY", "registerExternalOrder_IPO" : "VFO_RAISE_ORDER_IPO", "registerExternalOrder_IPO_ST" : "VFO_RAISE_ORDER_IPO_ST", "registerExternalOrder_ISO" : "VFO_RAISE_ORDER_ISO"}

#order.applicable.operationId.mapping={"registerExternalOrder_PO":"SFC_RAISE_ORDER","fetchDealerBalance":"SFC_FETCH_DEALER_BALANCE","getLineItemsStatus":"SFC_LINE_ITEM_STATUS", "getLineItems":"SFC_PICK_LIST", "fetchERPOrderStatus" : "SFC_FETCH_ERP_ORDER_STATUS", "registerDigitalExternalOrder":"SFC_DIGITAL_RAISE_ORDER", "fetchPretupsDealerBalance":"PRETUP_DIGITAL_DEALER_BALANCE", "pretupTransferRequest":"PRETUP_TRANSFER_REQUEST", "reconcileExternalInventory" : "VFO_RECONCILE_UPLOAD_INVENTORY", "registerExternalOrder_IPO" : "VFO_RAISE_ORDER_IPO", "registerExternalOrder_IRO" : "VFO_RAISE_ORDER_IRO", "registerExternalOrder_IPO_ST" : "VFO_RAISE_ORDER_IPO_ST", "registerExternalOrder_ISO" : "VFO_RAISE_ORDER_ISO"}

order.applicable.operationId.mapping={"registerExternalOrder_PO":"SFC_RAISE_ORDER","fetchDealerBalance":"SFC_FETCH_DEALER_BALANCE","getLineItemsStatus":"SFC_LINE_ITEM_STATUS", "getLineItems":"SFC_PICK_LIST", "fetchERPOrderStatus" : "SFC_FETCH_ERP_ORDER_STATUS", "registerDigitalExternalOrder":"SFC_DIGITAL_RAISE_ORDER", "fetchPretupsDealerBalance":"PRETUP_DIGITAL_DEALER_BALANCE", "pretupTransferRequest":"PRETUP_TRANSFER_REQUEST", "reconcileExternalInventory" : "VFO_RECONCILE_UPLOAD_INVENTORY", "registerExternalOrder_IPO" : "VFO_RAISE_ORDER_IPO", "registerExternalOrder_IRO" : "VFO_RAISE_ORDER_IRO", "registerExternalOrder_IPO_ST" : "VFO_RAISE_ORDER_IPO_ST", "registerExternalOrder_ISO" : "VFO_RAISE_ORDER_ISO", "registerSubscriberExternalOrder_IRO": "VFO_SUBSCRIBER_RAISE_ORDER_IRO", "registerExternalOrder_IEO":"VFO_RAISE_ORDER_IEO"}

################### Product SKU Resolve Related Properties ######################
# Product SKU fetched during raise order, based on serial number.
# For Ex: 3PP is channel, if the value is true then we first call ims with first serial number and resolve product sku
# if it is false, then we assume valid product sku is already provided in raise order request
# by default the value is false for undefined channel
ims.search.serial.channel.map={"3PP" : true, "order-management-api" : false}

#notification.management.INSTANT_SALES_ORDER_DIGITAL.templates={"orderCreated" : "CreateOrder", "confirmationRequest" : "ConfirmationRequest", "paymentConfirmation" : "PaymentConfirmationRequest","postOrderConfirmation" : "PostConfirmationRequest", "postPaymentConfirmation" : "PaymentPostConfirmation"}
#order.type.default.reversed.state=REVERSED
#order.inventory.default.reserve.state=Reserved



#invoice.fetch.filter.map={'invoiceId' : 'invoiceId', 'orderId' : 'orderId', 'buyer' : 'buyer', 'seller' : 'seller', 'receiver' : 'receiver', 'generatedBy' : 'generatedBy', 'status' : 'status', 'dueAmount' : 'dueAmount', 'totalPrice' : 'totalAmount', 'totalTax' : 'totalTax', 'totalSellerCommission' : 'totalSellerCommission', 'totalBuyerCommission' : 'totalBuyerCommission', 'totalDiscount' : 'totalDiscount', 'createTimestamp' : 'createdStamp'}
#invoice.fetch.sort.map={'invoiceId' : 'invoiceId', 'buyer' : 'buyer', 'seller' : 'seller', 'receiver' : 'receiver', 'generatedBy' : 'generatedBy', 'status' : 'status', 'dueAmount' : 'dueAmount', 'totalPrice' : 'totalAmount', 'createTimestamp' : 'createdStamp'}


#ims.search.serial.channel.map={"3PP" : true, "order-management-api" : false}


party.resolve.reseller.idtype.searchtype.mapping={"RESELLERID":"RESELLER_ID", "RESELLERMSISDN":"RESELLER_MSISDN", "TERMINALID":"ADDITIONAL_FIELD", "DEALERCODE":"ADDITIONAL_FIELD"}
party.resolve.idtype.proxy.maping={"RESELLERID":"dmsPartyProxy", "RESELLERMSISDN":"dmsPartyProxy", "TERMINALID":"dmsPartyProxy", "DEALERCODE":"dmsPartyProxy", "SUBSCRIBERID":"subscriberPartyProxy", "SUBSCRIBERMSISDN":"subscriberPartyProxy"}
order.operator.system.token.for.triggered.operations={  "ersReference": "87627365768275356776",  "startTime": "1614254785232",  "rootComponent": "order-management",  "context": {    "client": {      "channel": "swagger-ui",      "clientId": "OM-Swagger",      "clientReference": "OMS"    },    "initiator": {      "uid": "OPERATOR",      "typ": "RESELLERUSERID",      "rtp": "operator",      "rmsisdn": "16010000",      "resellerPath": "OPERATOR"    }  }}
order.operator.authorization.token.for.triggered.operations=abc
order.payment.mpesa.scheduler.pool.size=10
ic.payment.status.fetch.link.errors=1599,9002
#subscriber.management.proxy.uri=NA
#subscriber.management.proxy.name=subscriberPartyProxy
#subscriber.management.default.type.id=SUBSCRIBER
#subscriber.management.default.account.id=OPERATOR
notification.management.custom.RAISE_ORDER.templates={"ISO":"CreateOrder"}
notification.management.custom.mail.recipient.key=SUBSCRIBEREMAIL
#notification.management.custom.mail.allow=false
notification.management.custom.mail.allow=true
#spring.profiles.active=cron
# Quick fixes
order.payment-preset.caching-enabled=false
order.resolve-bulk-reseller-info.enabled=false
order.fetch-contract-details.once-only=false
#sfc specific
delete.order.external_inventory=false
order.evaluate-rules.classname=ApplicableProductRule

erp.link.proxy.postMapping=/vfo-link/request
erp.link.proxy.uri=http://svc-vfo-link:8094


################### Client wise rest template configuration ###################
account.management.rest.template.http.max.idle.second=50
account.management.rest.template.http.keep.alive.second=30
account.management.rest.template.http.connection.timeout.second=20
account.management.rest.template.http.read.timeout.second=20
 
contract.management.rest.template.http.max.idle.second=50
contract.management.rest.template.http.keep.alive.second=30
contract.management.rest.template.http.connection.timeout.second=20
contract.management.rest.template.http.read.timeout.second=20
 
reseller.management.rest.template.http.max.idle.second=50
reseller.management.rest.template.http.keep.alive.second=30
reseller.management.rest.template.http.connection.timeout.second=20
reseller.management.rest.template.http.read.timeout.second=20
 
erp.link.rest.template.http.max.idle.second=50
erp.link.rest.template.http.keep.alive.second=30
erp.link.rest.template.http.connection.timeout.second=20
erp.link.rest.template.http.read.timeout.second=20
 
inventory.management.rest.template.http.max.idle.second=50
inventory.management.rest.template.http.keep.alive.second=30
inventory.management.rest.template.http.connection.timeout.second=20
inventory.management.rest.template.http.read.timeout.second=20
 
notification.management.rest.template.http.max.idle.second=50
notification.management.rest.template.http.keep.alive.second=30
notification.management.rest.template.http.connection.timeout.second=20
notification.management.rest.template.http.read.timeout.second=20
 
product.management.rest.template.http.max.idle.second=50
product.management.rest.template.http.keep.alive.second=30
product.management.rest.template.http.connection.timeout.second=20
product.management.rest.template.http.read.timeout.second=20
 
ers.reference.generator.rest.template.http.max.idle.second=50
ers.reference.generator.rest.template.http.keep.alive.second=30
ers.reference.generator.rest.template.http.connection.timeout.second=20
ers.reference.generator.rest.template.http.read.timeout.second=20
 
 
order.type.default.failed.state=FAILED
invoice.settle.eligible.order.states=TRANSFERRED,EXTERNAL_CREATED
 
oms-out-stream.replicaCount=1
 
populate.external.inventory.scheduler.max.retry.count=5
populate.external.inventory.retryable.scheduler.cron=0/50 * * * * ?
 
 
order.default.volume.unit=CUBIC_METER
order.default.weight.unit=GRAM
#key: field to hide/remove
#value: if empty string is given, then the field is removed from response, else replace with given value
order.hidden.additional.field.map={ "senderPin": "******", "invoiceAmount" : ""}
# Enable/Disable account transaction creation in AMS
order.make.account.transaction.operation.enabled=true
contract.commission.disable.product.type.list=SERIALIZED,NONSERIALIZED,TRACKABLE_NONSERIALIZED
 
############# Audit trail data feed ##############
auditFeed.componentName=oms
auditFeed.eventType=audit
auditFeed.version=1
audit.feed.list.type=INCLUDE
audit.feed.list.events=RAISE_ORDER
auditFeed.freemarker.file.path=/opt/seamless/conf/order-management-system/templates/
auditFeed.default.template=oms_audit_feed.ftl

######### External Order update properties ###########
ext.order.update.show.requestedItems.key=SEAMLESS_SHOW-REQUESTEDITEMS
ext.order.update.default.to.state=TRANSFERRED
ext.order.update.default.allow.state.list=EXTERNAL_CREATED,EXTERNAL_APPROVED
exclude.invoice.for.item.with.zero.quantity=true
#########################################################

##delete inventory on closing IRO
order.closed.delete.inventory=true

order.type.default.return.inventory.available.state=Available
#order.type.default.external.rejected.state=EXTERNAL_REJECTED
#order.type.default.external.closed.state=EXTERNAL_CLOSED


return.inventory.to.initiator=true
## comma seperated list of order types for which inventory return be assigned to initiator
return.inventory.to.initiator.for.order_types=ISO

## IMS reserved inventory request for which we want to remove some attributes based on ProductType viz., SERIALIZED, NONSERIALIZED, ...
ims.request.restricted.attribute_map={ALL: "instalmentCount,monthlyInstalmentAmountwithVat,downpaymentAmountwithVat"}

#vfo specific enable invoice generation for IRO
enable.invoice.generation.for.return=true

#############

order.search.order_by.externalId=false